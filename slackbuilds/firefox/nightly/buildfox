#!/bin/sh

TMP=${TMP:-/tmp}

BUILD=${BUILD:-1}

CWD=${CWD:-$(pwd)}

MOZ=${MOZ:-${TMP}/firefox}

LANG_SYS=${LANG_SYS:-$(locale | grep "^LC_ALL" |cut -f2 -d = | cut -f1 -d. | sed 's/_/-/g')}

# Substitute your own language:
PKGLANG=${PKGLANG:-${LANG_SYS}}

PKG_NAME=${PKG_NAME:-${CWD}/$(basename firefox-*.tar.bz2)}
#PKG_NAME=firefox-60.0a1.pt-BR.linux-x86_64.tar.bz2

#PKGVERSION=${PKGVERSION:-$(echo ${PKG_NAME} | cut -f2 -d - | cut -f1,2 -d.)}
#VERSION=60.0a1

# Substitute your relese version:
VERSION=${VERSION:-60.0a1}

#RELEASEVER=${RELEASEVER:-$(echo ${VERSION} | cut -f 1 -d r | cut -f 1 -d b | cut -f 1 -d e)}

#pkg name version
PRGNAM=${PRGNAM:-firefox-${VERSION}}

PKG=${PKG:-${TMP}/${PRGNAM}}

# Automatically determine the architecture we're building on:
if [ -z "${ARCH}" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i686 LIBDIRSUFFIX="" ;;
    x86_64) ARCH=x86_64 LIBDIRSUFFIX="64" ;;
  esac
fi

if [ $(id -u) -ne 0 ]; then
    echo -e "\n\e[1;34m Usuário \e[1;31m$USER\e[0m \e[1;34mnão é root\n faça login como root\n para executar o script\e[0m ..!!\n"
      su
    else
    
URL_PKG=${URL_PKG:-https://ftp.mozilla.org/pub/firefox/nightly/$(date +%Y)/$(date +%m)/$(date +%Y)-02-11-22-00-56-mozilla-central-l10n/firefox-${VERSION}.${PKGLANG}.linux-${ARCH}.tar.bz2}
#URL_PKG=${URL_PKG:-https://ftp.mozilla.org/pub/firefox/nightly/$(date +%Y)/$(date +%m)/$(date +%Y)-$(date +%m)-$(date +%d)-$(date +%H)-$(date +%M)-$(date +%S)-mozilla-central-l10n/firefox-${VERSION}.${PKGLANG}.linux-${ARCH}.tar.bz2}



if [ -f ${PKG_NAME} ]; then 

echo "Ah, found it ${PKG_NAME} .!";

# Source file availability:
elif [ ! -f ${PKG_NAME} ]; then
  echo "Source '$(basename ${PKG_NAME})' not available yet..."
  # Check if the $CWD is writable at all - if not, download to $PKG_NAME
  [ -w "$CWD" ] ||  PKG_NAME="$CWD/$(basename $PKG_NAME)"
  
  if ! [ "x${URL_PKG}" == "x" ]; then
   echo "Will download file to $(dirname $PKG_NAME)"
    wget -nv -T 20 "${URL_PKG}" || true
     echo "Download complete."
    
    if [ $? -ne 0 -o ! -s "${PKG_NAME}" ]; then
     echo "Downloading '$(basename ${PKG_NAME})' failed... aborting the build."
      mv -f "${PKG_NAME}" "${PKG_NAME}".FAIL
       exit 1
    fi
  else
    echo "File '$(basename ${PKG_NAME})' not available... aborting the build."
     exit 1
  fi
fi

rm -rf ${MOZ}*

mkdir -p ${PKG}

mkdir -p ${PKG}/usr/lib${LIBDIRSUFFIX}

mkdir -p ${PKG}/usr/lib${LIBDIRSUFFIX}/mozilla/plugins

mkdir -p ${PKG}/usr/lib${LIBDIRSUFFIX}/firefox-${VERSION}

mkdir -p ${PKG}/usr/share/applications

mkdir -p ${PKG}/usr/share/icons

mkdir -p ${PKG}/usr/share/pixmaps

mkdir -p ${PKG}/usr/lib${LIBDIRSUFFIX}/firefox-${VERSION}/chrome/icons/default

cp -ar ${CWD}/hicolor ${PKG}/usr/share/icons

cd ${TMP}

# Extract all packages tar,gz,tgz,tlz,xz,txz,bz2,tbz
tar xfk $CWD/${PKG_NAME} || exit 1

cp -ar ${MOZ}/* ${PKG}/usr/lib${LIBDIRSUFFIX}/firefox-${VERSION}

mkdir ${PKG}/install

MODIFICA=${MODIFICA:-$(sed  -i '/lib64/ s/firefox-.*/firefox-'"$VERSION"'\/firefox firefox )/g;' doinst.sh)}

cp -ar ${CWD}/doinst.sh ${PKG}/install/

cp -ar ${CWD}/slack-desc ${PKG}/install/

cp -ar ${CWD}/LICENSE  ${PKG}/usr/lib${LIBDIRSUFFIX}/firefox-${VERSION}/

cp -ar ${CWD}/mozilla-firefox.desktop  ${PKG}/usr/share/applications/

cp -ar ${MOZ}/browser/chrome/icons/default/default16.png ${PKG}/usr/lib${LIBDIRSUFFIX}/firefox-${VERSION}/chrome/icons/default

cd ${PKG}

chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \; -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \;

 makepkg -l y -c n ../mozilla-firefox-${PKGLANG}_${VERSION}-${ARCH}-${BUILD}.txz

mv  ../mozilla-firefox-${PKGLANG}_${VERSION}-${ARCH}-${BUILD}.txz ${CWD}

rm -rf ${MOZ}*
rm -rf ${PRGNAM}

fi