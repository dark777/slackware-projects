# Primeiro se o mysql estiver executando vamos dar um stop no mysql:

bash-4.4$ su -c "/etc/rc.d/rc.mysqld stop"

bash-4.4$ su -c "chmod 755 /etc/rc.d/rc.mysqld"

bash-4.4$ su -c "mysql_install_db --user=mysql"

bash-4.4$ su -c "mysqld_safe --user=mysql&"

bash-4.4$ su -c "mysql_secure_installation"

Enter current password for root (enter for none): [ENTER]

OK, successfully used password, moving on... 

##############################################################################################################################################################
Set root password? [Y/n] [Y] Y
New password: (Digite aqui aquela que será a sua senha)
Re-enter new password: (Redigite a senha)
Password updated successfully!

Remove anonymous users? [Y/n] Y
Disallow root login remotely? [Y/n] Y

Remove test database and access to it? [Y/n] Y

Reload privilege tables now? [Y/n] Y

bash-4.4$ su -c "mkdir -p /var/log/mysql"

bash-4.4$ su -c "chown -R mysql.mysql /var/log/mysql"

bash-4.4$ su -c "/etc/rc.d/rc.mysqld stop"

bash-4.4$ su -c "killall mysqld"

bash-4.4$ su -c "/etc/rc.d/rc.mysqld start"


# Agora Pra acessar o MySQL digite:

bash-4.4$ su -c "mysql -p"
ou
bash-4.4$ su -c "mysql -u root -p"
ou
bash-4.4$ su -c "mysql -h localhost -u root -p"


##############################################################################################################################################################
# Alterando a senha de root do MySQL no Slackware 14.1

# Parar o serviço mysqld:

bash-4.4$ su -c "/etc/rc.d/rc.mysqld stop"


# Em outro terminal digite:

bash-4.4$ su -c "killall mysqld"

bash-4.4$ su -c "mysqld_safe --skip-grant-tables"


# Volte ao primeiro terminal e acesse o banco:

bash-4.4$ su -c "mysql --user=root mysql"

# Estando no console do banco digite o comando para atualizar a senha:

MariaDB [mysql]>  update user set Password=PASSWORD('aqui_a_nova_senha') where user='root';
MariaDB [mysql]>  flush privileges;
MariaDB [mysql]>  exit;

# Reinicie o mysqld:

bash-4.4$ su -c "/etc/rc.d/rc.mysqld restart"

##############################################################################################################################################################

# Fazendo importação e exportacao de arquivos TXT's
correspondentes a uma tabela para MariaDB(Mysql).


Os dados do arquivo TXT serão os dados abaixo:
01; Boi Preto; 2000-02-29
02; Sol Nascente; 2009-10-01
03; Parque Belo; 2007-03-15
04; Pedra Bonita; 2001-08-25
05; Nossa Senhora; 2011-06-22



1ª) Passo - Vamos criar o arquivo contendo os dados no diretório do seu usuário comum:

Digite a seguinte linha abaixo e pressione enter e depois que apareceu >
copie e cole o conteúdo acima que será importado para o banco de dados teste
depois de copiado pressione enter e digite EOF:

bash-4.4$ cat >~/cadastros.txt<<EOF
>01; Boi Preto; 2000-02-29
>02; Sol Nascente; 2009-10-01
>03; Parque Belo; 2007-03-15
>04; Pedra Bonita; 2001-08-25
>05; Nossa Senhora; 2011-06-22
EOF



2ª) Passo - Vamos logar no MariaDB:

bash-4.4$ su -c "mysql -h localhost -u root -p"
Senha: <digite a senha do admin root>.
pressione ENTER

Enter password: <digite a senha do seu MariaDB(Mysql)>
pressione ENTER


Caso você tenha o sudo ativado em seu Slackware faça:

bash-4.4$ sudo mysql -h localhost -u root -p
Senha: <digite a senha do admin root>.
pressione ENTER

Enter password: <digite a senha do seu MariaDB(Mysql)>
pressione ENTER


Aparecerá a seguinte linha de comando abaixo:

MariaDB [(none)]>



3ª) Passo -  Logado no MariaDB vamos criar o banco  teste:

MariaDB [(none)]> create database teste;                                                                                                                       
Query OK, 1 row affected (0.00 sec)


Listando o banco de dados criado:

MariaDB [(none)]> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| teste              |
+--------------------+
4 rows in set (0.00 sec)



4ª) Passo - Entrando no banco teste para criarmos a tabela:

MariaDB [(none)]> use teste;


feito isso aparecerá o seguinte terminal abaixo:

MariaDB [teste]>



5ª) Passo - Criaremos a tabela cadastros:

MariaDB [teste]> create table cadastros(
    -> `id_faz` int unique not null primary key,                                 
    -> `nome_faz` varchar(25) unique not null,   
    -> `data_compra` date not null
    -> );

Query OK, 0 rows affected (0.00 sec)


Listando a tabela criada:

MariaDB [teste]> show tables;
+-----------------+
| Tables_in_teste |
+-----------------+
| cadastros       |
+-----------------+
1 row in set (0.00 sec)


6ª) Passo - Importando o arquivo cadastros.txt para o banco teste:

MariaDB [teste]> load data local infile "cadastros.txt" into table cadastros fields terminated by ';';
Query OK, 5 rows affected (0.01 sec)                 
Records: 5  Deleted: 0  Skipped: 0  Warnings: 0

Onde terminated by é o separador dos dados dentro do arquivo.



7ª) Passo - Listaremos os dados inseridos na tabela:

MariaDB [teste]> select *from cadastros;
+--------+----------------+-------------+
| id_faz | nome_faz       | data_compra |
+--------+----------------+-------------+
|    1   |  Boi Preto     |  2000-02-29 |
|    2   |  Sol Nascente  |  2009-10-01 |
|    3   |  Parque Belo   |  2007-03-15 |
|    4   |  Pedra Bonita  |  2001-08-25 |
|    5   |  Nossa Senhora |  2011-06-22 |
+--------+----------------+-------------+
5 rows in set (0.00 sec)



Deletando a linha que contem o id_faz=2 da tabela cadastros:

MariaDB [teste]> delete from cadastros where id_faz=2;
Query OK, 1 row affected (0.00 sec)                                                                            
                                                                                                               
MariaDB [teste]> select *from fazendas;                                                                        
+--------+---------------+-------------+                                                                       
| id_faz | nome_faz      | data_compra |                                                                       
+--------+---------------+-------------+                                                                  
|      1 |  Boi Preto    | 2000-02-29  |                                                                 
|      3 |  Parque Belo  | 2007-03-15  |                                                                    
|      4 |  Pedra Bonita | 2001-08-25  |                                                                       
|      5 |  Medeiros     | 2011-06-22  |                                                                       
+--------+---------------+-------------+                                                                       
4 rows in set (0.00 sec)



Reinserindo o dado excluido:

MariaDB [teste]> insert into cadastros(id_faz,nome_faz,data_compra)values("2", "Sol Nascente", "2009-10-01");
Query OK, 1 row affected (0.00 sec)

Listando os dados da tabela:

MariaDB [teste]> select *from cadastros;
+--------+---------------+-------------+
| id_faz | nome_faz      | data_compra |
+--------+---------------+-------------+
|      1 |  Boi Preto    | 2000-02-29  |
|      2 | Sol Nascente  | 2009-10-01  |
|      3 |  Parque Belo  | 2007-03-15  |
|      4 |  Pedra Bonita | 2001-08-25  |
|      5 |  Medeiros     | 2011-06-22  |
+--------+---------------+-------------+



Fazendo um update do campo nome_faz na tabela cadastros:

MariaDB [teste]> update cadastros set nome_faz="Agua Bonita" where id_faz=5;
Query OK, 1 row affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0


Listando os dados da tabela:

MariaDB [teste]> select *from cadastros;
+--------+---------------+-------------+
| id_faz | nome_faz      | data_compra |
+--------+---------------+-------------+
|      1 |  Boi Preto    | 2000-02-29  |
|      2 | Sol Nascente  | 2009-10-01  |
|      3 |  Parque Belo  | 2007-03-15  |
|      4 |  Pedra Bonita | 2001-08-25  |
|      5 | Agua Bonita   | 2011-06-22  |
+--------+---------------+-------------+
6 rows in set (0.00 sec)


Note que no id_faz=5, o campo nome_faz que continha:

nome_faz="Medeiros"

foi atualizado para:

nome_faz="Agua Bonita"

##############################################################################################################################################################

Agora vamos realizar os mesmos passos acima mas com auto_increment.
Primeiro vamos exportar os dados importados em nossa tabela cadastros,
para um novo arquivo que será salvo em  /tmp chamado exportacao.txt:


8ª) Passo - Exportando os dados da tabela cadastros para a pasta /tmp/ no arquivo exportacao.txt:

MariaDB [teste]> select id_faz, nome_faz, data_compra into outfile "/tmp/exportacao.txt" fields terminated by ';'  from cadastros;
Query OK, 6 rows affected (0.00 sec)

Este comando acima exporta campos específicos de uma tabela,
a priori poderíamos deixar o campo id_faz de lado, mas como estamos aprendendo,
a exportar os dados de uma tabela estamos exportando todos os campos.

Ou você também pode usar um destes comando abaixo:

MariaDB [teste]> select * from cadastros into outfile "/tmp/exportacao.txt" fields terminated by ';';
Query OK, 5 rows affected (0.00 sec)


MariaDB [teste]> select * into outfile "/tmp/exportacao.txt" fields terminated by ';'  from cadastros;
Query OK, 5 rows affected (0.00 sec)


Com estes três comandos acima todos os  campos da tabela são exportados,
para /tmp/exportacao.txt, nossos dados exportados
ficará no formato abaixo sem o separador ";" no final:

bash-4.4$ cat /tmp/exportacao.txt
1;Boi Preto;2000-02-29
2;Sol Nascente;2009-10-01
3;Parque Belo;2007-03-15
4;Pedra Bonita;2001-08-25
5;Nossa Senhora;2011-06-22


Você também pode usar este comando abaixo:

MariaDB [teste]> select * into outfile "/tmp/exportacao.txt" fields terminated by ';' lines terminated by ';\n' from cadastros;
Query OK, 5 rows affected (0.01 sec)

Com este comando acima nossos dados exportados para /tmp/exportacao.txt
ficara no formato abaixo note os separadores ";" no final:

bash-4.4$ cat /tmp/exportacao.txt
1;Boi Preto;2000-02-29;
2;Sol Nascente;2009-10-01;
3;Parque Belo;2007-03-15;
4;Pedra Bonita;2001-08-25;
5;Nossa Senhora;2011-06-22;

Com estes comandos acima, não importa como nossos dados exportados,
para /tmp/exportacao.txt, ficarão formatados você só não pode usar o comando abaixo,
pois a forma como ele exporta os dados dificulta nosso serviço,
aumentando a complexidade mas como queremos 
manter as coisas o mais simples não o use para esta finalidade:

MariaDB [teste]> select * into outfile "/tmp/exportacao.txt" fields terminated by ';' enclosed by '"' lines terminated by '' from cadastros;

Este comando acima salvaria os dados neste formato abaixo:

bash-4.4$ cat /tmp/exportacao.txt
"1";"Boi Preto";"2000-02-29";"2";"Sol Nascente";"2009-10-01";"3";"Parque Belo";"2007-03-15";"4";"Pedras Bonitas";"2017-12-12";"5";"Medeiros";"2011-06-22";


9ª) Passo - Vamos editar o arquivo exportado removendo todos os id's,
deixando somente os nomes e datas. Atualmente nosso arquivo em /tmp/exportacao.txt,
se encontra no formato abaixo:

bash-4.4$ cat /tmp/exportacao.txt
1; Boi Preto;2000-02-29
2; Sol Nascente;2009-10-01
3; Parque Belo;2007-03-15
4; Pedra Bonita;2001-08-25
5; Nossa Senhora;2011-06-22


Então precisamos remover os id's mas, não podemos remover os separadores após os id's,
é ai que esta o pulo do gato para termos sucesso na nossa importação em uma tabela com 
auto_increment. Então digite o comando abaixo para formatar o arquivo:

bash-4.4$ su -c "sed -i 's/^1//g;s/^2//g;s/^3//g;s/^4//g;s/^5//g;s/^ *//g;' /tmp/exportacao.txt"
Senha: <digite a senha do admin root>.
pressione ENTER


Este comando sed acima removerá somente os id's mantendo os separadores,
então nosso arquivo em  /tmp/exportacao.txt  ficara assim como este abaixo,
note os separadores ";" no inicio da linha:

bash-4.4$ cat /tmp/exportacao.txt
;Boi Preto;2000-02-29
;Sol Nascente;2009-10-01
;Parque Belo;2007-03-15
;Pedra Bonita;2001-08-25
;Nossa Senhora;2011-06-22


Ou você também pode usar um destes comando abaixo,
este comando é mais útil pois geralmente uma tabela exportada,
contém centenas ou milhares de registros:

MariaDB [teste]> select  nome_faz, data_compra into outfile "/tmp/exportacao.txt" fields terminated by ';' lines terminated by ';\n'  from cadastros;
Query OK, 5 rows affected (0.00 sec)


MariaDB [teste]> select nome_faz, data_compra from cadastros into outfile "/tmp/exportacao.txt" fields terminated by ';' lines terminated by ';\n';
Query OK, 5 rows affected (0.00 sec)


Com estes dois comandos acima nossos dados exportados para /tmp/exportacao.txt
ficou sem os id's que se encontra no campo id_faz deixado de lado,
ficando no formato abaixo note os separadores ";" no final e a ausencia dos id's:

bash-4.4$ cat /tmp/exportacao.txt
Boi Preto;2000-02-29;
Sol Nascente;2009-10-01;
Parque Belo;2007-03-15;
Pedra Bonita;2001-08-25;
Nossa Senhora;2011-06-22;


Então precisamos adicionar os separadores que estariam após os id's,
que foi deixado de lado, precisamos colocar os separadores ";",
antes dos nomes, pois sem estes separadores todo nosso trabalho,
vai por água abaixo quando importar o arquivo para a tabela devolta.
Então digite o comando abaixo para formatar o arquivo:

bash-4.4$ su -c "sed -i '/^/ s//;/g;' /tmp/exportacao.txt"
Senha: <digite a senha do admin root>.
pressione ENTER


O comando sed acima adicionará os separadores ";" antes dos nomes,
entao nosso arquivo em  /tmp/exportacao.txt  ficara assim como este abaixo,
note os separadores ";" no inicio da linha:

bash-4.4$ cat /tmp/exportacao.txt
;Boi Preto;2000-02-29;
;Sol Nascente;2009-10-01;
;Parque Belo;2007-03-15;
;Pedra Bonita;2001-08-25;
;Nossa Senhora;2011-06-22;


10ª) Passo - Vamos deletar nossa tabela cadastros,
para recriar novamente mas com auto_increment.

MariaDB [teste]> drop table cadastros;
Query OK, 0 rows affected (0.04 sec)


11ª) Passo - Recriando a tabela cadastros com auto_increment:

MariaDB [teste]>  create table cadastros(
    -> `id_faz` int auto_increment,
    -> `nome_faz` varchar(25) unique not null,
    -> `data_compra` date not null
    -> );
Query OK, 0 rows affected (0.01 sec)


Ou se preferir pode apenas alterar o campo id_faz.
para que o campo seja auto_increment,
digite o comando abaixo.

MariaDB [teste]>  alter table cadastros change `id_faz` `id_faz` int auto_increment;                  
Query OK, 5 rows affected (0.04 sec)               
Records: 5  Duplicates: 0  Warnings: 0


12ª) Passo - Precisamos fazer um truncate na nossa tabela cadastros,
simplesmente por que criamos os campos nome_faz como unique, 
caso contrário, poderíamos fazer apenas a importação,
novamente pois ficaria com id's auto_increment de 6 a 10. 
Mas os nomes e datas ficariam redundantes, isso se você esta fazendo,
uma reimportação, dos dados que foram exportados da mesma tabela,
onde o campo nome seja unique, ou até mesmo de outra tabela que possua, 
um nome gravado no campo, e seja o mesmo que ja esta gravado na tabela atual,
caso contrário tudo se sucederá perfeitamente.


MariaDB [teste]> truncate table cadastros;
Query OK, 0 rows affected (0.01 sec)


MariaDB [teste]> select * from cadastros;
Empty set (0.00 sec)


13ª) Passo - Importando novamente o arquivo /tmp/exportacao.txt,
ja formatado no 9ª passo, para o banco teste.


MariaDB [teste]> load data local infile "/tmp/exportacao.txt" into table cadastros fields terminated by ';';
Query OK, 5 rows affected, 5 warnings (0.81 sec)     
Records: 5  Deleted: 0  Skipped: 0  Warnings: 5


MariaDB [teste]> select *from cadastros;
+--------+-----------------+-------------+
| id_faz | nome_faz        | data_compra |
+--------+-----------------+-------------+
|    1   |  Boi Preto      | 2000-02-29  |
|    2   |  Sol Nascente   | 2009-10-01  |
|    3   |  Parque Belo    | 2007-03-15  |
|    4   |  Pedra Bonita   | 2001-08-25  |
|    5   |  Nossa Senhora  | 2011-06-22  |
+--------+-----------------+-------------+
5 rows in set (0.00 sec)


Sources:
http://www.andersonmedeiros.com/importar-arquivos-txt-para-postgresql/
http://www.novotopico.com/aprendendo-a-mecher-no-phpmyadmin-t6363.html
http://blog.ffelix.eti.br/exportar-dados-de-tabelas-mysql-para-txt-ou-csv/
https://www.rlsystem.com.br/outros/noticia/select-insert-delete-update-mysql/
https://llagerlof.wordpress.com/2009/12/12/como-criar-um-banco-de-dados-no-mysql/
https://www.scriptbrasil.com.br/forum/topic/139195-resolvido-importar-um-arquivo-txt-para-o-meu-bd/
http://www.bosontreinamentos.com.br/mysql/mysql-delete-e-truncate-table-excluir-registros-de-uma-tabela-16/
https://imasters.com.br/artigo/6446/mysql/utilizacao-de-datas-no-mysql?trace=1519021197&source=single
https://imasters.com.br/artigo/321/php/gravando-resultado-de-um-sql-em-um-arquivo-txt/?trace=1519021197&source=single